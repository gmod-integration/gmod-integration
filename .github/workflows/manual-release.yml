name: Manual Release

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Version number (e.g., 5.0.2)'
                required: true
                type: string
            prerelease:
                description: 'Mark as pre-release'
                required: false
                default: false
                type: boolean

permissions:
    contents: write
    pull-requests: write

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Validate version format
              run: |
                  VERSION="${{ github.event.inputs.version }}"
                  if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                    echo "Error: Version must be in format X.Y.Z"
                    exit 1
                  fi

            - name: Update version in code
              run: |
                  VERSION="${{ github.event.inputs.version }}"
                  sed -i "s/gmInte\.version = \"[^\"]*\"/gmInte.version = \"$VERSION\"/g" lua/autorun/gmod_integration.lua
                  grep "gmInte.version" lua/autorun/gmod_integration.lua

            - name: Commit version update
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add lua/autorun/gmod_integration.lua
                  git commit -m "chore: release version ${{ github.event.inputs.version }}"

            - name: Create and push tag
              run: |
                  TAG="v${{ github.event.inputs.version }}"
                  git tag $TAG
                  git push origin $TAG
                  git push origin HEAD

            - name: Create release archive
              run: |
                  mkdir -p gmod-integration-release/addons/gmod-integration
                  cp -r lua/ gmod-integration-release/addons/gmod-integration/
                  [ -f README.md ] && cp README.md gmod-integration-release/addons/gmod-integration/
                  [ -f LICENSE ] && cp LICENSE gmod-integration-release/addons/gmod-integration/

                  cat > gmod-integration-release/addons/gmod-integration/addon.json << EOF
                  {
                    "title": "Gmod Integration",
                    "type": "ServerContent",
                    "tags": ["fun", "roleplay"],
                    "ignore": [
                      "*.git*",
                      "*.md",
                      "*.yml",
                      "*.yaml"
                    ]
                  }
                  EOF

                  cd gmod-integration-release
                  zip -r ../gmod-integration-${{ github.event.inputs.version }}.zip .
                  cd ..

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ github.event.inputs.version }}
                  name: v${{ github.event.inputs.version }}
                  body: |
                      ## Gmod Integration v${{ github.event.inputs.version }}

                      Manual release created.

                      ### Installation
                      1. Download the zip file below
                      2. Extract it to your `garrysmod/` directory
                      3. Restart your server
                  files: |
                      gmod-integration-${{ github.event.inputs.version }}.zip
                  draft: false
                  prerelease: ${{ github.event.inputs.prerelease }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to GMod Store
              if: success() && github.event.inputs.prerelease != 'true'
              run: |
                  VERSION="${{ github.event.inputs.version }}"

                  # Prepare changelog for manual release
                  CHANGELOG="Manual release v$VERSION created.

                  Installation:
                  1. Download the zip file
                  2. Extract it to your garrysmod/ directory  
                  3. Restart your server"

                  # Upload to GMod Store
                  curl -X POST "https://www.gmodstore.com/api/products/${{ secrets.GMODSTORE_PRODUCT_ID }}/versions" \
                    -H "Authorization: Bearer ${{ secrets.GMODSTORE_API_TOKEN }}" \
                    -F "name=v$VERSION" \
                    -F "changelog=$CHANGELOG" \
                    -F "file=@gmod-integration-$VERSION.zip" \
                    -F "releaseType=stable" \
                    --fail-with-body || echo "Failed to publish to GMod Store - check your API token and product ID"
              env:
                  GMODSTORE_API_TOKEN: ${{ secrets.GMODSTORE_API_TOKEN }}
                  GMODSTORE_PRODUCT_ID: ${{ secrets.GMODSTORE_PRODUCT_ID }}
